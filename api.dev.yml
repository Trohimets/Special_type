version: '3.8'

x-env: &app-env
  # Django
  SECRET_KEY: "${SECRET_KEY}" 
  ALLOWED_HOSTS: "${ALLOWED_HOSTS}" 
  DEBUG: "${DEBUG}"

  DJANGO_SUPERUSER_EMAIL: "${DJANGO_SUPERUSER_EMAIL}"
  DJANGO_SUPERUSER_PASSWORD: "${DJANGO_SUPERUSER_PASSWORD}"
  DJANGO_SUPERUSER_USERNAME: "${DJANGO_SUPERUSER_USERNAME}"
  # API
  X_API_TOKEN: "${X_API_TOKEN}"
  # PostgresSQL
  DB_ENGINE: "${DB_ENGINE}"
  POSTGRES_HOST: "${POSTGRES_HOST}"
  POSTGRES_PORT: "${POSTGRES_PORT}"
  POSTGRES_USER: "${POSTGRES_USER}"
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
  POSTGRES_DATABASE_NAME: "${POSTGRES_DATABASE_NAME}"

  #yookassa
  API_YOOKASSA_KEY: "${API_YOOKASSA_KEY}"
  SHOP_ID: "${SHOP_ID}"


services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - db_value:/var/lib/postgresql/data/
    environment:
      <<: *app-env


  web:
    image: registry.gitlab.com/god15/special-needs/backend/api:${CI_COMMIT_SHA}
    command:
      bash -c "python manage.py migrate &&
      python manage.py collectstatic --no-input &&
      gunicorn core.wsgi -b 0.0.0.0:8000"
    restart: always
    volumes:
      - static_value:/app/backend_static/
      - media_value:/app/backend_media/
    environment:
      <<: *app-env
    depends_on:
      - db

  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_value:/var/html/backend_static/
      - media_value:/var/html/backend_media/
    environment:
      <<: *app-env
    depends_on:
      - web


volumes: 
  static_value: 
  media_value: 
  db_value:
